#version 400

layout(location=0) in vec4 in_Position;
layout(location=1) in vec4 in_Color;
layout(location=3) in vec3 in_Normal;

uniform mat4 projectionMatrix;
uniform mat4 viewMatrix;
uniform mat4 modelMatrix;

uniform vec3 light_pos;
uniform vec3 light_intensities; //colour

out vec4 frag_Color;

void main(void)
{
	gl_Position = projectionMatrix * viewMatrix * modelMatrix * in_Position;

	mat3 normMatrix = transpose(inverse(mat3(modelMatrix)));
	vec3 normal = normalize(normMatrix * in_Normal);

	vec3 worldPos = vec3(modelMatrix * in_Position);
	vec3 to_light = light_pos - worldPos;

	float brightness = 0.75 + dot(normal, to_light) / ( length(to_light) * length(normal) );
	brightness = clamp(brightness, 0, 1) + 0.25;
	frag_Color = vec4(brightness * light_intensities * in_Color.rgb, in_Color.a);
}

